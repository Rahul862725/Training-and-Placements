<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Placements</title>
    <link rel="icon" type="image/x-icon" href="/img/favicon-16x16.png" />

    <link
      href="https://fonts.googleapis.com/css?family=Poppins"
      rel="stylesheet"
    />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
      * {
        box-sizing: border-box;
        padding: 0;
        margin: 0;
      }

      body {
        font-family: "Poppins";
      }

      #header {
        position: sticky;
        top: 0;
      }
    </style>
  </head>

  <body>
    <div>{{>header}}</div>
    <br /><br /><br /><br /><br /><br />
    {{!-- Write code here. --}}
    <div class="bg-[#002A51] text-white py-24 space-y-8">
      <div class="text-center space-y-3">
        <h6 class="text-7xl text-center font-extrabold">Placements</h6>
        <p class="font">
          A collection of resources for students at NIT Jalandhar
        </p>
      </div>
      <div class="flex items-center justify-center space-x-10">
        <button
          class="border-2 py-2 w-[10rem] rounded-md bg-[#2167A7] hover:bg-[#002A51]"
          onclick="insightClick()"
          id = "insight"
        >
          Insights
        </button>
        <button
          class="border-2 py-2 w-[10rem] rounded-md bg-[#2167A7] hover:bg-[#002A51]"
          onclick="statsClick()"
        >
          Stats
        </button>
        <button
          class="border-2 py-2 w-[10rem] bg-[#2167A7] rounded-md hover:bg-[#002A51]"
          onclick="processClick()"
        >
          Process
        </button>
        <button
          class="border-2 py-2 w-[10rem] rounded-md bg-[#2167A7] hover:bg-[#002A51]"
          onclick="policyClick()"
        >
          Policy
        </button>
      </div>
    </div>
    <div id="content"></div>
    <br /><br /><br /><br /><br /><br /><br />
    <div>{{>footer}}</div>
  </body>
  <script>

    document.getElementById("insight").click();

    const content = document.getElementById("content");
    function processClick() {
      let pro_link = `{{URL}}/Placement/process`;
      fetch(pro_link)
        .then((response) => response.json())
        .then((data) => {
          console.log(data);
          for (let i = 0; i < data.length; i++) {
            if (data[i].PProcess != null) content.innerHTML = data[i].PProcess;
          }
        });
    }

    function policyClick() {
      const p_link = `{{URL}}/Placement/policy`;
      fetch(p_link)
        .then((response) => response.json())
        .then((data) => {
          for (let i = 0; i < data.length; i++) {
            if (data[i].PPolicy != null) content.innerHTML = data[i].PPolicy;
          }
        });
    }
    function insightClick() {
      const link = `{{URL}}/Internship/insight`;
      fetch(link)
        .then((response) => response.json())
        .then((data) => {
          content.innerHTML = "";
          let str1 = `
        <div class="flex justify-center items-center">
          <div class="my-20 max-w-[72vw]">
            <h6 class="text-6xl text-center font-bold">Placement Insights</h6>
            <div class="mt-6 space-y-2 text-center">`;

        let str2 = "";
          for(let i=0; i<data.length; i++){
            var student = data[i];
            if(student.TwoMInternship || student.SixMInternship){
              str2 += `<p> `+ student.date.substr(0,10) + ` <span>      </span> ` + student.Name + `      ` + student.RollNo + ` of batch ` + student.Batch + ` from `+ student.Branch + ` branch got Internship at `+ student.Company+` with Stipend of `+ student.Package + `</p>`;
            }
          }

          let str3 = `</div>
              </div>
            </div>
          </div>`;

          content.innerHTML += str1 + str2 + str3;
        });
    }

    function statsClick() {
      const link = `{{URL}}/Internship/insight`;
      fetch(link)
        .then((response) => response.json())
        .then((data) => {
          console.log(data);

          content.innerHTML = "";
          let str1 = `
          <div>
          <div class="flex justify-center items-center">
            <div class="h-fit my-20 space-y-20">
              <div class="max-w-[72vw]">
                <h6 class="text-6xl text-center font-bold">Placements Stats</h6>
              </div>`;

          let str2 = `
          <div class="flex items-center justify-center">
            <canvas
              id="barChart"
              style="width: 700px; max-width: 800px"
              class="bg-gradient-to-b from-[#ffe9ec] via-white to-[#e2effa] p-5 rounded-lg shadow-lg"
            ></canvas>
          </div>
          `;

          let str3 = `
              </div>
            </div>
          </div>`;

          content.innerHTML += str1 + str2 + str3;

          var script = document.createElement("script");

          let currentData = {};

          for (let i = 0; i < data.length; i++) {
            let student = data[i];
            let studentBatch = student.Batch.trim().split("-")[1];
            let key = student.Company;

            if(!currentData[key]){
                currentData[key] = {};
                currentData[key]['currentYear'] = 0;
                currentData[key]['previousYear'] = 0;
            }

            // checking if it is currentYear

            let currYear = new Date().getFullYear().toString().slice(-2);
            if (Number(studentBatch) === Number(currYear)) {

              
              currentData[key]['currentYear'] +=1;
            }
            if (Number(studentBatch) === Number(currYear) - 1) {
              currentData[key]['previousYear'] += 1;
            }
          }

          let companies = [];
          let currentYearPlacements = [];
          let previousYearPlacements = [];

          let i = 0;

          for (let k in currentData) {
            if(i === 7){
              break;
            }
            companies.push(k);
            currentYearPlacements.push(currentData[k]['currentYear']);
            previousYearPlacements.push(currentData[k]['previousYear']);
            i++;
          }
          
          console.log(currentData);

          new Chart("barChart", {
            type: "bar",
            data: {
              labels: companies,
              datasets: [
                {
                  label: "This Year",
                  backgroundColor: "#2167A7",
                  data: currentYearPlacements,
                },
                {
                  label: "Last Year",
                  backgroundColor: "#FF9E5E",
                  data: previousYearPlacements,
                },
              ],
            },

            options: {
              scales: {
                yAxes: [
                  {
                    ticks: {
                      display: false,
                      beginAtZero: true,
                    },
                  },
                ],
              },
            },
          });
        });
    }
  </script>
</html>
